version: 2.1

slack-fail-post-step: &slack-fail-post-step
  post-steps:
    - slack/notify:
        event: fail
        branch_pattern: main
        channel: << pipeline.parameters.alerts-slack-channel >>
        custom: |
          {
            "text": "",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "‚ùå *Failure* `${CIRCLE_PROJECT_REPONAME}` (Build: #${CIRCLE_BUILD_NUM}) on `${CIRCLE_BRANCH}`"
                }
              },
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "text": { "type": "plain_text", "text": "View Job" },
                    "url": "${CIRCLE_BUILD_URL}"
                  }
                ]
              }
            ]
          }

orbs:
  browser-tools: circleci/browser-tools@1.2
  hmpps: ministryofjustice/hmpps@3.11
  slack: circleci/slack@4.5
  node: circleci/node@4.5.1
  mem: circleci/rememborb@0.0.1

executors:
  integration-tests:
    docker:
      - image: cimg/node:16.13-browsers
      - image: circleci/redis:buster
    working_directory: ~/app

parameters:
  alerts-slack-channel:
    type: string
    default: ppud-replacement-devs
  releases-slack-channel:
    type: string
    default: ppud-replacement-releases

jobs:
  build:
    executor:
      name: hmpps/node
      tag: 16.13-browsers
    steps:
      - checkout
      - node/install-packages
      - run:
          command: |
            npm run build
            DATE=$(date '+%Y-%m-%d')
            export BUILD_NUMBER=${DATE}.${CIRCLE_BUILD_NUM}
            export BUILD_URL=${CIRCLE_BUILD_URL}
            export GIT_REF="$CIRCLE_SHA1"
            npm run record-build-info
      - run: # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build-info.json
            - build
            - dist
            - .cache/Cypress

  can_i_deploy:
    environment:
      PACT_BROKER_BASE_URL: "https://pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk"
      PACT_BROKER_DISABLE_SSL_VERIFICATION: "true"
    executor: hmpps/node
    parameters:
      environment:
        type: string
    steps:
      - run:
          name: Run Pact can-i-deploy
          command: |
            npx --package='@pact-foundation/pact-node' \
                pact-broker can-i-deploy --pacticipant manage-recalls-ui --broker-base-url $PACT_BROKER_BASE_URL \
                --version $CIRCLE_SHA1 \
                --to deployed:<< parameters.environment >>

  tag_pact_version:
    environment:
      PACT_BROKER_BASE_URL: "https://pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk"
      PACT_BROKER_DISABLE_SSL_VERIFICATION: "true"
    executor: hmpps/node
    parameters:
      tag:
        type: string
    steps:
      - run:
          name: Tag contract version with deployment
          command: |
            npx --package='@pact-foundation/pact-node' pact-broker create-version-tag \
              --pacticipant="manage-recalls-ui" --version="$CIRCLE_SHA1" --tag="<< parameters.tag >>" --auto-create-version \
              --broker-base-url="$PACT_BROKER_BASE_URL" --broker-username="$PACT_BROKER_USERNAME" --broker-password="$PACT_BROKER_PASSWORD"

  check_outdated:
    executor:
      name: hmpps/node
      tag: 16.13-browsers
    steps:
      - checkout
      - node/install-packages
      - run:
          name: Check version
          command: npm --version
      - run:
          name: Run check
          command: npm outdated typescript govuk-frontend
      - slack/notify:
          event: fail
          channel: << pipeline.parameters.alerts-slack-channel >>
          custom: |
            {
              "blocks": [
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": ":circleci-${CCI_STATUS}: CircleCI job *${CIRCLE_JOB}* ${CCI_STATUS}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*${CIRCLE_PROJECT_REPONAME}* failed ${CIRCLE_JOB}"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View job"
                    },
                    "url": "${CIRCLE_BUILD_URL}"
                  }
                }
              ]
            }

  unit_test:
    environment:
      PACT_BROKER_BASE_URL: "https://pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk"
      PACT_BROKER_DISABLE_SSL_VERIFICATION: "true"
    executor:
      name: hmpps/node
      tag: 16.13-browsers
    resource_class: xlarge
    steps:
      - checkout
      - node/install-packages
      - run: npm run test
      - run: npm run pact-test
      - store_artifacts:
          path: pact/pacts
      - run:
          name: Upload pact files to broker
          command: |
            npx pact-broker publish pact/pacts \
              --broker-base-url $PACT_BROKER_BASE_URL \
              --consumer-app-version $CIRCLE_SHA1 --tag $CIRCLE_BRANCH \
              -u $PACT_BROKER_USERNAME -p $PACT_BROKER_PASSWORD
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test-results/unit-test-reports.html

  integration_test:
    executor: integration-tests
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - node/install-packages
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.1/wiremock-standalone-2.27.1.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9091 --root-dir fake-manage-recalls-api/stubs
          background: true
      - run:
          name: Run the node app.
          command: npm run start:feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - run:
          name: integration tests
          command: npm run int-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: integration_tests/videos
      - store_artifacts:
          path: integration_tests/screenshots

  accessibility_test:
    executor: integration-tests
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - node/install-packages
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.1/wiremock-standalone-2.27.1.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9091 --root-dir fake-manage-recalls-api/stubs
          background: true
      - run:
          name: Run the node app.
          command: npm run start:feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - run:
          name: accessibility tests
          command: npm run accessibility-test || true
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: integration_tests/videos
      - store_artifacts:
          path: integration_tests/screenshots

  e2e-tests:
    executor: hmpps/default
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - run:
          name: Run E2E tests on '<< parameters.environment >>'
          command: ./scripts/run-e2e-tests.sh -e << parameters.environment >>

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step


      - unit_test:
          requires:
            - build
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - integration_test:
          requires:
            - build
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - accessibility_test:
          requires:
            - build
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - hmpps/helm_lint:
          name: helm_lint
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - hmpps/build_docker:
          name: build_docker
          publish: false
          persist_container_image: true
          additional_docker_build_args: --build-arg BUILD_URL=${CIRCLE_BUILD_URL}
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - hmpps/trivy_pipeline_scan:
          name: trivy_scan_low_medium_cves
          fail_build: false
          cve_severities_to_check: UNKNOWN,LOW,MEDIUM
          requires:
            - build_docker

      - hmpps/trivy_pipeline_scan:
          name: trivy_scan
          requires:
            - build_docker
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - hmpps/publish_docker:
          name: publish_docker
          requires:
            - helm_lint
            - integration_test
            - trivy_scan
            - unit_test
          filters:
            branches:
              only:
                - main
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - hmpps/deploy_env:
          name: deploy_dev
          env: dev
          filters:
            branches:
              only:
                - main
          requires:
            - publish_docker
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - tag_pact_version:
          name: tag_pact_version_dev
          tag: deployed:dev
          requires:
            - deploy_dev
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - hmpps/sentry_release_and_deploy:
          name: notify_sentry_dev
          sentry_project: manage-recalls-ui
          sentry_environment: DEV
          sentry_create_release: true
          requires:
            - deploy_dev
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - e2e-tests:
          name: e2e-tests-dev
          environment: dev
          requires:
            - deploy_dev
          filters:
            branches:
              only:
                - main
          context:
            - hmpps-common-vars
            - ppud-replacement-circleci-vars
          <<: *slack-fail-post-step

      - request-preprod-approval:
          type: approval
          requires:
            - e2e-tests-dev

      - can_i_deploy:
          name: can_i_deploy_to_preprod
          environment: preprod
          requires:
            - request-preprod-approval
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - hmpps/deploy_env:
          name: deploy_preprod
          env: preprod
          context:
            - hmpps-common-vars
            - manage-recalls-ui-preprod
          requires:
            - can_i_deploy_to_preprod
          <<: *slack-fail-post-step

      - tag_pact_version:
          name: tag_pact_version_preprod
          tag: deployed:preprod
          requires:
            - deploy_preprod
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - hmpps/sentry_release_and_deploy:
          name: notify_sentry_preprod
          sentry_project: manage-recalls-ui
          sentry_environment: PRE-PROD
          requires:
            - deploy_preprod
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - e2e-tests:
          name: e2e-tests-preprod
          environment: preprod
          requires:
            - deploy_preprod
          filters:
            branches:
              only:
                - main
          context:
            - hmpps-common-vars
            - ppud-replacement-circleci-vars
          <<: *slack-fail-post-step

      - request-prod-approval:
          type: approval
          requires:
            - e2e-tests-preprod

      - can_i_deploy:
          name: can_i_deploy_to_prod
          environment: prod
          requires:
            - request-prod-approval
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - hmpps/deploy_env:
          name: deploy_prod
          env: prod
          context:
            - hmpps-common-vars
            - manage-recalls-ui-prod
          requires:
            - can_i_deploy_to_prod
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          <<: *slack-fail-post-step

      - tag_pact_version:
          name: tag_pact_version_prod
          tag: deployed:prod
          requires:
            - deploy_prod
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

      - hmpps/sentry_release_and_deploy:
          name: notify_sentry_prod
          sentry_project: manage-recalls-ui
          sentry_environment: PROD
          requires:
            - deploy_prod
          context:
            - hmpps-common-vars
          <<: *slack-fail-post-step

  fake-os-places-api-build:
    jobs:
      - hmpps/build_docker:
          name: build_fake_os_places_api
          image_name: quay.io/hmpps/ppud-fake-os-places-api
          dockerfile_dir: fake-os-places-api
          filters:
            branches:
              only:
                - main

  security:
    triggers:
      - schedule:
          cron: "28 6 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/trivy_latest_scan:
          context:
            - hmpps-common-vars
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
      - hmpps/npm_security_audit:
          context:
            - hmpps-common-vars
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
      - hmpps/veracode_pipeline_scan:
          context:
            - veracode-credentials
            - hmpps-common-vars
          slack_channel: << pipeline.parameters.alerts-slack-channel >>

  security-weekly:
    triggers:
      - schedule:
          cron: "52 6 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          context:
            - veracode-credentials
            - hmpps-common-vars
          slack_channel: << pipeline.parameters.alerts-slack-channel >>

  check_outdated:
    triggers:
      - schedule:
          cron: "0 12 * * 5"
          filters:
            branches:
              only:
                - main
    jobs:
      - check_outdated:
          context:
            - hmpps-common-vars
