/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/error': {
    get: operations['errorUsingGET']
    put: operations['errorUsingPUT']
    post: operations['errorUsingPOST']
    delete: operations['errorUsingDELETE']
    options: operations['errorUsingOPTIONS']
    head: operations['errorUsingHEAD']
    patch: operations['errorUsingPATCH']
  }
  '/generate-revocation-order': {
    post: operations['generateRevocationOrderUsingPOST']
  }
  '/health': {
    get: operations['handleUsingGET']
  }
  '/health/**': {
    get: operations['handleUsingGET_1']
  }
  '/info': {
    get: operations['handleUsingGET_2']
  }
  '/recalls': {
    get: operations['findAllUsingGET']
    post: operations['bookRecallUsingPOST']
  }
  '/search': {
    post: operations['prisonerSearchUsingPOST']
  }
}

export interface definitions {
  BookRecallRequest: {
    nomsNumber: string
  }
  ModelAndView: {
    empty?: boolean
    model?: { [key: string]: any }
    modelMap?: { [key: string]: { [key: string]: any } }
    reference?: boolean
    status?:
      | 'ACCEPTED'
      | 'ALREADY_REPORTED'
      | 'BAD_GATEWAY'
      | 'BAD_REQUEST'
      | 'BANDWIDTH_LIMIT_EXCEEDED'
      | 'CHECKPOINT'
      | 'CONFLICT'
      | 'CONTINUE'
      | 'CREATED'
      | 'DESTINATION_LOCKED'
      | 'EXPECTATION_FAILED'
      | 'FAILED_DEPENDENCY'
      | 'FORBIDDEN'
      | 'FOUND'
      | 'GATEWAY_TIMEOUT'
      | 'GONE'
      | 'HTTP_VERSION_NOT_SUPPORTED'
      | 'IM_USED'
      | 'INSUFFICIENT_SPACE_ON_RESOURCE'
      | 'INSUFFICIENT_STORAGE'
      | 'INTERNAL_SERVER_ERROR'
      | 'I_AM_A_TEAPOT'
      | 'LENGTH_REQUIRED'
      | 'LOCKED'
      | 'LOOP_DETECTED'
      | 'METHOD_FAILURE'
      | 'METHOD_NOT_ALLOWED'
      | 'MOVED_PERMANENTLY'
      | 'MOVED_TEMPORARILY'
      | 'MULTIPLE_CHOICES'
      | 'MULTI_STATUS'
      | 'NETWORK_AUTHENTICATION_REQUIRED'
      | 'NON_AUTHORITATIVE_INFORMATION'
      | 'NOT_ACCEPTABLE'
      | 'NOT_EXTENDED'
      | 'NOT_FOUND'
      | 'NOT_IMPLEMENTED'
      | 'NOT_MODIFIED'
      | 'NO_CONTENT'
      | 'OK'
      | 'PARTIAL_CONTENT'
      | 'PAYLOAD_TOO_LARGE'
      | 'PAYMENT_REQUIRED'
      | 'PERMANENT_REDIRECT'
      | 'PRECONDITION_FAILED'
      | 'PRECONDITION_REQUIRED'
      | 'PROCESSING'
      | 'PROXY_AUTHENTICATION_REQUIRED'
      | 'REQUESTED_RANGE_NOT_SATISFIABLE'
      | 'REQUEST_ENTITY_TOO_LARGE'
      | 'REQUEST_HEADER_FIELDS_TOO_LARGE'
      | 'REQUEST_TIMEOUT'
      | 'REQUEST_URI_TOO_LONG'
      | 'RESET_CONTENT'
      | 'SEE_OTHER'
      | 'SERVICE_UNAVAILABLE'
      | 'SWITCHING_PROTOCOLS'
      | 'TEMPORARY_REDIRECT'
      | 'TOO_EARLY'
      | 'TOO_MANY_REQUESTS'
      | 'UNAUTHORIZED'
      | 'UNAVAILABLE_FOR_LEGAL_REASONS'
      | 'UNPROCESSABLE_ENTITY'
      | 'UNSUPPORTED_MEDIA_TYPE'
      | 'UPGRADE_REQUIRED'
      | 'URI_TOO_LONG'
      | 'USE_PROXY'
      | 'VARIANT_ALSO_NEGOTIATES'
    view?: definitions['View']
    viewName?: string
  }
  'Mono«ResponseEntity«List«SearchResult»»»': { [key: string]: any }
  Pdf: {
    content: string
  }
  RecallResponse: {
    id: string
    nomsNumber: string
  }
  SearchRequest: {
    nomsNumber: string
  }
  SearchResult: {
    dateOfBirth?: string
    firstName?: string
    lastName?: string
    nomsNumber?: string
  }
  View: {
    contentType?: string
  }
}

export interface operations {
  errorUsingGET: {
    responses: {
      /** OK */
      200: {
        schema: { [key: string]: { [key: string]: any } }
      }
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
      /** Not Found */
      404: unknown
    }
  }
  errorUsingPUT: {
    responses: {
      /** OK */
      200: {
        schema: { [key: string]: { [key: string]: any } }
      }
      /** Created */
      201: unknown
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
      /** Not Found */
      404: unknown
    }
  }
  errorUsingPOST: {
    responses: {
      /** OK */
      200: {
        schema: { [key: string]: { [key: string]: any } }
      }
      /** Created */
      201: unknown
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
      /** Not Found */
      404: unknown
    }
  }
  errorUsingDELETE: {
    responses: {
      /** OK */
      200: {
        schema: { [key: string]: { [key: string]: any } }
      }
      /** No Content */
      204: never
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
    }
  }
  errorUsingOPTIONS: {
    responses: {
      /** OK */
      200: {
        schema: { [key: string]: { [key: string]: any } }
      }
      /** No Content */
      204: never
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
    }
  }
  errorUsingHEAD: {
    responses: {
      /** OK */
      200: {
        schema: { [key: string]: { [key: string]: any } }
      }
      /** No Content */
      204: never
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
    }
  }
  errorUsingPATCH: {
    responses: {
      /** OK */
      200: {
        schema: { [key: string]: { [key: string]: any } }
      }
      /** No Content */
      204: never
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
    }
  }
  generateRevocationOrderUsingPOST: {
    responses: {
      /** OK */
      200: {
        schema: definitions['Pdf']
      }
      /** Created */
      201: unknown
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
      /** Not Found */
      404: unknown
    }
  }
  handleUsingGET: {
    parameters: {
      body: {
        /** body */
        body?: { [key: string]: string }
      }
    }
    responses: {
      /** OK */
      200: {
        schema: { [key: string]: any }
      }
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
      /** Not Found */
      404: unknown
    }
  }
  handleUsingGET_1: {
    parameters: {
      body: {
        /** body */
        body?: { [key: string]: string }
      }
    }
    responses: {
      /** OK */
      200: {
        schema: { [key: string]: any }
      }
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
      /** Not Found */
      404: unknown
    }
  }
  handleUsingGET_2: {
    parameters: {
      body: {
        /** body */
        body?: { [key: string]: string }
      }
    }
    responses: {
      /** OK */
      200: {
        schema: { [key: string]: any }
      }
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
      /** Not Found */
      404: unknown
    }
  }
  findAllUsingGET: {
    responses: {
      /** OK */
      200: {
        schema: definitions['RecallResponse'][]
      }
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
      /** Not Found */
      404: unknown
    }
  }
  bookRecallUsingPOST: {
    parameters: {
      body: {
        /** bookRecallRequest */
        bookRecallRequest: definitions['BookRecallRequest']
      }
    }
    responses: {
      /** OK */
      200: {
        schema: definitions['RecallResponse']
      }
      /** Created */
      201: unknown
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
      /** Not Found */
      404: unknown
    }
  }
  prisonerSearchUsingPOST: {
    parameters: {
      body: {
        /** searchRequest */
        searchRequest: definitions['SearchRequest']
      }
    }
    responses: {
      /** OK */
      200: {
        schema: definitions['Mono«ResponseEntity«List«SearchResult»»»']
      }
      /** Created */
      201: unknown
      /** Unauthorized */
      401: unknown
      /** Forbidden */
      403: unknown
      /** Not Found */
      404: unknown
    }
  }
}

export interface external {}
