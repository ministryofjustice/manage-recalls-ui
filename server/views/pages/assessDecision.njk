{% extends "../partials/layout.njk" %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{%- from "moj/components/search/macro.njk" import mojSearch -%}
{% from "govuk/components/button/macro.njk" import govukButton %}

{% set pageTitle = makePageTitle("Do you agree with the recall recommendation?", errors) %}

{% block beforeContent %}
    {{ govukBackLink({
        text: "Back",
        href: backLinkUrl("assess", urlInfo)
    }) }}
{% endblock %}

{% block content %}

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            {% include '../partials/error-summary.njk' %}
            {{ pageHeadingCaption({ action: 'Assess a recall', name: recall.fullName }) }}

            <form novalidate action="{{ makeUrl(urlInfo.currentPage, urlInfo, csrfToken) }}"
                  method="post" enctype="multipart/form-data">
                <input type="hidden" name="recommendedRecallType" value="{{ recall.recommendedRecallType }}" />
                {% set yesHtml %}
                    {% set id = "confirmedRecallTypeDetailFixed" if recall.recommendedRecallType === 'FIXED' else "confirmedRecallTypeDetailStandard" %}
                    {{ govukTextarea({
                        name: id,
                        id: id,
                        label: {
                            text: "Provide more detail"
                        },
                        value: formValues[id],
                        errorMessage: errorMessage(errors[id])
                    }) }}
                {% endset -%}
                {% set noHtml %}
                    {% set id = "confirmedRecallTypeDetailStandard" if recall.recommendedRecallType === 'FIXED' else "confirmedRecallTypeDetailFixed" %}
                    {{ govukTextarea({
                        name: id,
                        id: id,
                        label: {
                            text: "Provide more detail"
                        },
                        value: formValues[id],
                        errorMessage: errorMessage(errors[id])
                    }) }}
                    <h2 class="govuk-heading-m govuk-!-margin-bottom-3">Upload the email</h2>
                    {%  set emailField = recall.emailsUploaded.CHANGE_RECALL_TYPE_EMAIL %}
                    {%  include '../partials/uploadedEmailLink.njk' %}
                    {{ govukFileUpload({
                        id: "confirmedRecallTypeEmailFileName",
                        name: "confirmedRecallTypeEmailFileName",
                        label: {
                            text: "Upload the email",
                            classes: 'govuk-visually-hidden'
                        },
                        attributes: {
                            accept: allowedEmailFileExtensionList()
                        },
                        errorMessage: errorMessage(errors.confirmedRecallTypeEmailFileName)
                    }) }}
                {% endset -%}
                {{ govukRadios({
                    idPrefix: "confirmedRecallType",
                    name: "confirmedRecallType",
                    fieldset: {
                        legend: {
                            html: "Do you agree with the " + ("fixed term " + getReferenceDataItemLabel('recallLengths', recall.recallLength) + " day" if recall.recommendedRecallType === 'FIXED' else "standard") + " recall recommendation?",
                            classes: "govuk-fieldset__legend--l",
                            isPageHeading: true
                        }
                    },
                    items: [
                        {
                            value: "FIXED" if recall.recommendedRecallType === 'FIXED' else "STANDARD",
                            text: "Yes, proceed with the recommended " + ("fixed term" if recall.recommendedRecallType === 'FIXED' else "standard") + " recall",
                            checked: formValues.confirmedRecallType == ("FIXED" if recall.recommendedRecallType === 'FIXED' else "STANDARD"),
                            conditional: {
                                html: yesHtml
                            }
                        },
                        {
                            value: "STANDARD" if recall.recommendedRecallType === 'FIXED' else "FIXED",
                            text: "No, " + ("upgrade to a standard recall" if recall.recommendedRecallType === 'FIXED' else "downgrade to a fixed term recall"),
                            checked: formValues.confirmedRecallType == ("STANDARD" if recall.recommendedRecallType === 'FIXED' else "FIXED"),
                            conditional: {
                                html: noHtml
                            }
                        }
                    ],
                    errorMessage: errorMessage(errors.confirmedRecallType)
                }) }}

                {{ formSubmitButton() }}
            </form>
        </div>
    </div>

{% endblock %}
