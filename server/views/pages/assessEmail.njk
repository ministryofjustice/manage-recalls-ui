{% extends "../partials/layout.njk" %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{%- from "moj/components/search/macro.njk" import mojSearch -%}
{% from "govuk/components/button/macro.njk" import govukButton %}

{% set pageTitle = applicationName + " - Assess a recall - Email the recall notification" %}

{% block beforeContent %}
    {{ govukBackLink({
        text: "Back",
        href: backLinkUrl("assess-download", urlInfo)
    }) }}
{% endblock %}

{% block content %}

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            {% if errors %}
                {{ govukErrorSummary({
                    titleText: "There is a problem",
                    errorList: errors.list,
                    attributes: {
                        'data-qa': 'error-list'
                    }
                }) }}
            {% endif %}
            <span class="govuk-caption-l"
                  data-qa="addRecallTypeCaption">Assess a recall for {{ recall.fullName }}</span>
            <h1 class='govuk-heading-l'>Email the recall notification</h1>
            <p class='govuk-body'>You must now email the recall notification you've downloaded to:</p>
            <ul class="govuk-list govuk-list--bullet">
                <li>the Probation Service including the:
                    <ul class="govuk-list govuk-list--bullet">
                        <li>Community Offender Manager (COM)</li>
                        <li>Senior Probation Officer (SPO)</li>
                        <li>Assistant Chief Officer (ACO)</li>
                        <li>functional mailbox</li>
                    </ul>
                </li>
                <li>the local police force</li>
                <li>the prison</li>
                <li>New Scotland Yard</li>
            </ul>
            {{ govukWarningText({
                text: "You must email the recall notification using Microsoft Outlook",
                iconFallbackText: "Warning"
            }) }}

            <div class="govuk-!-margin-top-4">
                <form novalidate action="{{ makeUrl('assess-email', urlInfo, csrfToken) }}"
                      method="post" enctype="multipart/form-data">
                    {% set emailConfirmHtml %}

                    <div class='govuk-body govuk-form-group govuk-!-margin-bottom-8'>
                        {{ govukDateInput({
                            name: 'recallNotificationEmailSentDateTime',
                            id: 'recallNotificationEmailSentDateTime',
                            formGroup: {
                                classes: 'govuk-!-margin-bottom-3'
                            },
                            fieldset: {
                                legend: {
                                    text: 'When did you send the email?',
                                    classes: 'govuk-fieldset__legend--m'
                                }
                            },
                            hint: {
                                text: 'For example, 23 5 2021 at 23:03'
                            },
                            items: dateTimeItems("recallNotificationEmailSentDateTime", formValues.recallNotificationEmailSentDateTimeParts, true),
                            errorMessage: errorMessage(errors.recallNotificationEmailSentDateTime)
                        }) }}
                        <div class='govuk-!-margin-bottom-6'>
                            {{ todayLink({
                                name: 'recallNotificationEmailSentDateTime',
                                cspNonce: cspNonce
                            }) }}
                        </div>
                        <h2 class="govuk-heading-m govuk-!-margin-bottom-3">Upload the email</h2>
                        {%  set emailField = recall.emailsUploaded.RECALL_NOTIFICATION_EMAIL %}
                        {%  include '../partials/uploadedEmailLink.njk' %}
                        {{ govukFileUpload({
                            id: "recallNotificationEmailFileName",
                            name: "recallNotificationEmailFileName",
                            label: {
                                text: "Upload the email",
                                classes: 'govuk-visually-hidden'
                            },
                            attributes: {
                                accept: allowedEmailFileExtensionList()
                            },
                            errorMessage: errorMessage(errors.recallNotificationEmailFileName)
                        }) }}
                    </div>
                    {% endset -%}

                    {{ govukCheckboxes({
                        idPrefix: "confirmRecallNotificationEmailSent",
                        name: "confirmRecallNotificationEmailSent",
                        fieldset: {
                            legend: {
                                text: "I have sent the email to all recipients",
                                classes: "govuk-visually-hidden"
                            }
                        },
                        items: [
                            {
                                value: "YES",
                                text: "I have sent the email to all recipients",
                                conditional: {
                                html: emailConfirmHtml
                            },
                                checked: true if formValues.confirmRecallNotificationEmailSent == 'YES'
                            }
                        ],
                        errorMessage: errorMessage(errors.confirmRecallNotificationEmailSent)
                    }) }}
                    <button class="govuk-button" data-qa="continueButton">Complete assessment</button>
                </form>
            </div>
        </div>
    </div>

{% endblock %}
