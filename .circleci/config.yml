version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@3.11
  slack: circleci/slack@4.4.2
  node: circleci/node@4.5.1
  mem: circleci/rememborb@0.0.1

executors:
  integration-tests:
    docker:
      - image: cimg/node:14.16-browsers
      - image: circleci/redis:buster
    working_directory: ~/app

parameters:
  alerts-slack-channel:
    type: string
    default: ppud-replacement-devs
  releases-slack-channel:
    type: string
    default: ppud-replacement-releases

jobs:
  build:
    executor:
      name: hmpps/node
      tag: 14.16-browsers
    steps:
      - checkout
      - node/install-packages
      - run:
          command: |
            npm run build
            DATE=$(date '+%Y-%m-%d')
            export BUILD_NUMBER=${DATE}.${CIRCLE_BUILD_NUM}
            export GIT_REF="$CIRCLE_SHA1"
            npm run record-build-info
      - run: # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build-info.json
            - build
            - dist
            - .cache/Cypress

  check_outdated:
    executor:
      name: hmpps/node
      tag: 14.16-browsers
    steps:
      - checkout
      - node/install-packages
      - run:
          name: Check version
          command: 'npm --version'
      - run:
          name: Run check
          command: 'npm outdated typescript govuk-frontend'
      - slack/notify:
          event: fail
          channel: << pipeline.parameters.alerts-slack-channel >>
          custom: |
            {
              "blocks": [
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": ":circleci-${CCI_STATUS}: CircleCI job *${CIRCLE_JOB}* ${CCI_STATUS}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*${CIRCLE_PROJECT_REPONAME}* failed ${CIRCLE_JOB}"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View job"
                    },
                    "url": "${CIRCLE_BUILD_URL}"
                  }
                }
              ]
            }

  unit_test:
    environment:
      PACT_BROKER_BASE_URL: "https://pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk"
    executor:
      name: hmpps/node
      tag: 14.16-browsers
    resource_class: xlarge
    steps:
      - checkout
      - node/install-packages
      - run: npm run test
      - store_artifacts:
          path: 'pact/pacts'
      - run:
          name: Upload pact files to broker
          command: |
            npx pact-broker publish pact/pacts \
              --broker-base-url $PACT_BROKER_BASE_URL \
              --consumer-app-version $CIRCLE_SHA1 --tag $CIRCLE_BRANCH \
              -u $PACT_BROKER_USERNAME -p $PACT_BROKER_PASSWORD
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test-results/unit-test-reports.html

  integration_test:
    executor: integration-tests
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.1/wiremock-standalone-2.27.1.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9091
          background: true
      - run:
          name: Run the node app.
          command: npm run start:feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - node/install-packages
      - run:
          name: integration tests
          command: npm run int-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: integration-tests/videos
      - store_artifacts:
          path: integration-tests/screenshots

  notify-sentry-deploy:
    docker:
      - image: getsentry/sentry-cli
    parameters:
      sentry_project:
        type: string
      sentry_environment:
        type: string
    environment:
      SENTRY_ORG: ministryofjustice
    steps:
      - checkout
      - mem/recall:
          env_var: APP_VERSION
      - run:
          name: Sentry - Create a release and notify of deployment
          command: |
            export SENTRY_PROJECT=<< parameters.sentry_project >>
            sentry-cli releases new $APP_VERSION --project $SENTRY_PROJECT
            sentry-cli releases set-commits $APP_VERSION --auto
            sentry-cli releases finalize $APP_VERSION
            sentry-cli releases deploys $APP_VERSION new -e << parameters.sentry_environment >>

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/

      - unit_test:
          context: [hmpps-common-vars]
          requires:
            - build

      - integration_test:
          requires:
            - build

      - hmpps/helm_lint:
          name: helm_lint

      - hmpps/build_docker:
          name: build_docker
          publish: false
          persist_container_image: true

      - hmpps/trivy_pipeline_scan:
          name: trivy_scan_low_medium_cves
          fail_build: false
          cve_severities_to_check: UNKNOWN,LOW,MEDIUM
          requires:
            - build_docker

      - hmpps/trivy_pipeline_scan:
          name: trivy_scan
          requires:
            - build_docker

      - hmpps/publish_docker:
          name: publish_docker
          requires:
            - helm_lint
            - integration_test
            - trivy_scan
            - unit_test
          filters:
            branches:
              only:
                - main

      - hmpps/deploy_env:
          name: deploy_dev
          env: dev
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - publish_docker

      - notify-sentry-deploy:
          name: notify_sentry_dev
          sentry_project: manage-recalls-ui
          sentry_environment: DEV
          requires:
            - deploy_dev

      - hmpps/trigger_job:
          name: end-to-end-tests-dev
          repository: manage-recalls-e2e-tests
          token: $CIRCLECI_AUTH_TOKEN
          build_parameters: '{ "only_run_deploy_check": true, "e2e_environment": "dev" }'
          requires:
            - deploy_dev
          context:
            - ppud-replacement-circleci-vars

      - request-preprod-approval:
          type: approval
          requires:
            - end-to-end-tests-dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: preprod
          context:
            - hmpps-common-vars
            - ppud-replacement-preprod
          requires:
            - request-preprod-approval

      - notify-sentry-deploy:
          name: notify_sentry_preprod
          sentry_project: manage-recalls-ui
          sentry_environment: PRE-PROD
          requires:
            - deploy_preprod

      - hmpps/trigger_job:
          name: end-to-end-tests-preprod
          repository: manage-recalls-e2e-tests
          token: $CIRCLECI_AUTH_TOKEN
          build_parameters: '{ "only_run_deploy_check": true, "e2e_environment": "preprod" }'
          requires:
            - deploy_preprod
          filters:
            branches:
              only:
                - main
          context:
            - ppud-replacement-circleci-vars

      - request-prod-approval:
          type: approval
          requires:
            - end-to-end-tests-preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: prod
          context:
            - hmpps-common-vars
            - ppud-replacement-prod
          requires:
            - request-prod-approval
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>

      - notify-sentry-deploy:
          name: notify_sentry_prod
          sentry_project: manage-recalls-ui
          sentry_environment: PROD
          requires:
            - deploy_prod

  security:
    triggers:
      - schedule:
          cron: "28 6 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/trivy_latest_scan:
          context:
            - hmpps-common-vars
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
      - hmpps/npm_security_audit:
          context:
            - hmpps-common-vars
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
      - hmpps/veracode_pipeline_scan:
          context:
            - veracode-credentials
            - hmpps-common-vars

  security-weekly:
    triggers:
      - schedule:
          cron: "52 6 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          context:
            - veracode-credentials
            - hmpps-common-vars

  check_outdated:
    triggers:
      - schedule:
          cron: "0 12 * * 5"
          filters:
            branches:
              only:
                - main
    jobs:
      - check_outdated:
          context:
            - hmpps-common-vars
