---
generic-service:
  nameOverride: manage-recalls-ui

  replicaCount: 4

  image:
    repository: quay.io/hmpps/manage-recalls-ui
    tag: app_version    # override at deployment time
    port: 3000

  ingress:
    enabled: true
    host: app-hostname.local    # override per environment
    tlsSecretName: manage-recalls-cert
    annotations:
      external-dns.alpha.kubernetes.io/aws-weight: "100"
      nginx.ingress.kubernetes.io/custom-http-errors: "501,502,503,504"
      nginx.ingress.kubernetes.io/default-backend: manage-recalls-error-pages
    # which cluster are we on: live-1 is blue, live is green
    contextColour: green

  livenessProbe:
    httpGet:
      path: /ping

  readinessProbe:
    httpGet:
      path: /ping

  custommetrics:
    enabled: true
    scrapeInterval: 15s
    metricsPath: /metrics
    metricsPort: 3001

  # Environment variables to load into the deployment
  env:
    NODE_ENV: "production"
    REDIS_TLS_ENABLED: "true"
    TOKEN_VERIFICATION_ENABLED: "true"

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    manage-recalls-ui:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"
      API_CLIENT_ID: "API_CLIENT_ID"
      API_CLIENT_SECRET: "API_CLIENT_SECRET"
      SYSTEM_CLIENT_ID: "SYSTEM_CLIENT_ID"
      SYSTEM_CLIENT_SECRET: "SYSTEM_CLIENT_SECRET"
      SESSION_SECRET: "SESSION_SECRET"
      MANAGER_NAME: "MANAGER_NAME"
      MANAGER_PHONE: "MANAGER_PHONE"
      OS_PLACES_API_KEY: "OS_PLACES_API_KEY"
    manage-recalls-ui-elasticache-redis:
      REDIS_HOST: "primary_endpoint_address"
      REDIS_AUTH_TOKEN: "auth_token"

generic-prometheus-alerts:
  targetApplication: manage-recalls-ui
